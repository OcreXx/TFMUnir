name: Security Analysis Snyk
description: Corre SCA, SAST, y Docker analisis con Snyk sube los resultados a GHAS.
inputs:
  docker-image-name:
    description: 'Nombre de la imagen Docker a scanear'
    required: true
    
  snyk-auth-token:
    description: 'Token para conectarse a snyk'
    required: true
    
runs:
  using: "composite"
  steps:
    #Auth: identificarse en snyk
    - name: Authenticate and Scan DVWA image with Snyk
      shell: powershell
      run: |
        snyk auth  ${{ inputs.snyk-auth-token }}

    # SCA: Análisis de dependencias
    - name: Dependency Analysis (SCA)
      shell: powershell
      run: |
        try {
          snyk test --sarif-file-output=snyk-dependencies.sarif
        }    
        catch {
          Write-Host "Snyk test ha encontrado vulnerabilidades en el analisis de dependencias, continua el escaneo..."
        } 
        # Si Snyk falla (código de salida no cero), continuar con el pipeline
        if ($LASTEXITCODE -ne 0) {
          exit 0
        }

    # SAST: Análisis estático de código
    - name: Static Code Analysis (SAST)
      shell: powershell  
      run: |
        try {
          snyk code test . --sarif-file-output=snyk-code.sarif
        }         
        catch {
          Write-Host "Snyk code ha encontrado vulnerabilidades en el SAST, continua el escaneo..."
        }
        # Si Snyk falla (codigo de salida no cero), continuar con el pipeline
        if ($LASTEXITCODE -ne 0) {
          exit 0
        }
        
        
    # Docker: Análisis de la imagen
    - name: Docker Image Analysis
      shell: powershell
      run: |
        try {
          snyk container test ${{ inputs.docker-image-name }} --sarif-file-output=snyk-docker.sarif
        }         
        catch {
          Write-Host "Snyk code ha encontrado vulnerabilidades en la imagen Docker, continua el escaneo..."
        }
        # Si Snyk falla (codigo de salida no cero), continuar con el pipeline
        if ($LASTEXITCODE -ne 0) {
          exit 0
        }

      # Subir los reportes a GHAS
      - name: Upload Dependency Report to GitHub Advanced Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-dependencies.sarif
  
      - name: Upload SAST Report to GitHub Advanced Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
  
      - name: Upload Docker Report to GitHub Advanced Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-docker.sarif
